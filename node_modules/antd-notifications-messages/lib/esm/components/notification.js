var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import { store } from '../utils';
import { AntdIcon } from './antdIcons';
export var Notification = function (_a) {
    var title = _a.title, message = _a.message, _b = _a.type, type = _b === void 0 ? 'success' : _b, id = _a.id, _c = _a.animation, animation = _c === void 0 ? 'fadeInRight' : _c, _d = _a.className, className = _d === void 0 ? '' : _d, rest = __rest(_a, ["title", "message", "type", "id", "animation", "className"]);
    return (React.createElement("div", { className: "ant-notification-notice " + (animation === 'fadeInRight' ? 'elementTopRight' : 'elementTopFadeIn') + " " + className },
        React.createElement("div", { className: "icon-notification icon-" + type },
            React.createElement(AntdIcon, __assign({ type: type }, rest))),
        React.createElement("div", null,
            React.createElement("div", { className: "notification-title" }, title),
            React.createElement("div", { className: "notification-content" }, message)),
        React.createElement("div", { className: "notification-close", onClick: function () { return store.remove(id); } })));
};
