"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.store = void 0;
var React = __importStar(require("react"));
var react_dom_1 = __importDefault(require("react-dom"));
var react_id_generator_1 = __importDefault(require("react-id-generator"));
var wrapper_1 = require("../components/wrapper");
var instances = [];
var render = function () {
    var elm = document.querySelector('.wrapper-notification');
    react_dom_1.default.render(React.createElement(wrapper_1.Wrapper, { instances: instances }), elm
        ? elm.parentElement
        : document.body.appendChild(document.createElement('DIV')));
};
var onTimeClose = function (duration, key) {
    return setTimeout(function () {
        exports.store.remove(key);
    }, duration);
};
exports.store = {
    add: function (_a) {
        var content = _a.content, duration = _a.duration;
        var key = (0, react_id_generator_1.default)();
        instances.push({ key: key, content: content });
        render();
        if (duration !== 0) {
            onTimeClose(duration, key);
        }
    },
    remove: function (key) {
        if (typeof onTimeClose == 'number') {
            clearTimeout(onTimeClose);
        }
        instances = instances.filter(function (f) { return f.key !== key; });
        render();
    },
};
